[{"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx":"1","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts":"2","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx":"3","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx":"4","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx":"5","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx":"6","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx":"7","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx":"8","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx":"9","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx":"10","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx":"11","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx":"12","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx":"13","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx":"14","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx":"15","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx":"16","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx":"17","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx":"18","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx":"19","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx":"20","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx":"21","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx":"22","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx":"23","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\EditStudentAccounts.tsx":"24","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageHours.tsx":"25","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\environment.tsx":"26","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentLeaderboard.tsx":"27","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentProfile.tsx":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":16644,"mtime":1612835084582,"results":"32","hashOfConfig":"30"},{"size":1958,"mtime":1607186443137,"results":"33","hashOfConfig":"30"},{"size":7343,"mtime":1611534772643,"results":"34","hashOfConfig":"30"},{"size":922,"mtime":1607044109359,"results":"35","hashOfConfig":"30"},{"size":8410,"mtime":1611625287348,"results":"36","hashOfConfig":"30"},{"size":3373,"mtime":1610821730223,"results":"37","hashOfConfig":"30"},{"size":2920,"mtime":1608168315936,"results":"38","hashOfConfig":"30"},{"size":2515,"mtime":1608250166997,"results":"39","hashOfConfig":"30"},{"size":10987,"mtime":1612036917865,"results":"40","hashOfConfig":"30"},{"size":6901,"mtime":1611534476054,"results":"41","hashOfConfig":"30"},{"size":8237,"mtime":1612036864800,"results":"42","hashOfConfig":"30"},{"size":4351,"mtime":1611618009747,"results":"43","hashOfConfig":"30"},{"size":8814,"mtime":1611535141910,"results":"44","hashOfConfig":"30"},{"size":11732,"mtime":1612038137974,"results":"45","hashOfConfig":"30"},{"size":6001,"mtime":1611623653804,"results":"46","hashOfConfig":"30"},{"size":13835,"mtime":1612835078195,"results":"47","hashOfConfig":"30"},{"size":13302,"mtime":1612031958643,"results":"48","hashOfConfig":"30"},{"size":5139,"mtime":1611716530910,"results":"49","hashOfConfig":"30"},{"size":8850,"mtime":1612032323478,"results":"50","hashOfConfig":"30"},{"size":7905,"mtime":1611534072415,"results":"51","hashOfConfig":"30"},{"size":7738,"mtime":1612031603785,"results":"52","hashOfConfig":"30"},{"size":5240,"mtime":1612032416125,"results":"53","hashOfConfig":"30"},{"size":12037,"mtime":1612837391840,"results":"54","hashOfConfig":"30"},{"size":269,"mtime":1611536628872,"results":"55","hashOfConfig":"30"},{"size":8423,"mtime":1612061482447,"results":"56","hashOfConfig":"30"},{"size":8263,"mtime":1612061749360,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1wlda11",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"60"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"60"},"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx",[],["135","136"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx",["137","138","139","140","141","142"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx",["143","144"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\n\r\n//This component is where a STUDENT would create an account\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  setIsAdminFalse: (e: any) => void;\r\n};\r\n\r\n//This is the copyright function. It is not currently being shown on screen.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass Signup extends React.Component<AcceptedProps, {}> {\r\n  //This fetch CREATES a student user. They are then linked to the correct group through the class code.\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/user/signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        studentUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n          classId: this.props.classCode,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.props.setIsAdminFalse(false);\r\n        this.props.updateToken(json.sessionToken);\r\n      });\r\n  };\r\n\r\n  //This function checks to see if an account has been successfully created (ie student has session token)\r\n  //It then pushes the user to the proper viewpoint\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.firstName === undefined) {\r\n      return <Redirect to=\"/signup\" />;\r\n    }\r\n    return <Redirect to=\"/myDashboard\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              component=\"h1\"\r\n              style={{ marginTop: \"35px\" }}\r\n              variant=\"h4\"\r\n            >\r\n              Student Sign-Up\r\n            </Typography>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n              \r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    onChange={(e) => {\r\n                      this.props.setFirstName(e.target.value);\r\n                      console.log(this.props.firstName);\r\n                    }}\r\n                    defaultValue={this.props.firstName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setLastName(e.target.value);\r\n                      console.log(this.props.lastName);\r\n                    }}\r\n                    defaultValue={this.props.lastName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                      console.log(this.props.email);\r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                      console.log(this.props.password);\r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"Code\"\r\n                    label=\"Enter Class Code \"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setClassCode(e.target.value);\r\n                      console.log(this.props.setClassCode);\r\n                    }}\r\n                    defaultValue={this.props.classCode}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item className=\"smallMarginTop\">\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n        \r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx",["145","146"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx",["147","148","149","150"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport World from \"../../Assets/undraw_the_world_is_mine_nb0e (1).svg\";\r\n\r\n//This component appears on the page as soon as a user arrives to the site\r\n\r\n//This function is not currently being called.\r\n//It contains the copyright.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"body2\" align=\"center\"></Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        {\"Copyright © ServiceTracker \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  collectToken: any;\r\n  isAdmin: any;\r\n  setIsAdminTrue: any;\r\n  setIsAdminFalse: any;\r\n  setTeacherProfile: (e: any) => void;\r\n};\r\n\r\nclass Login extends React.Component<AcceptedProps, {}> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n  }\r\n\r\n  //Nested Fetches- This setup allows a student & a teacher to log in using the same form.\r\n  //It takes the inputted information, determines if student or teacher, and then shows proper page\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/user/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        studentUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n          classId: this.props.classCode,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          console.log(\"Login was successful\");\r\n        } else {\r\n          console.log(\"Login in failed\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        this.props.setIsAdminFalse(false);\r\n        this.props.updateToken(json.sessionToken);\r\n        if (this.props.sessionToken) {\r\n          console.log(\"yes\");\r\n        } else {\r\n          return fetch(`${API_URL}/teacheruser/login`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              teacherUser: {\r\n                email: this.props.email,\r\n                password: this.props.password,\r\n              },\r\n            }),\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n            }),\r\n          })\r\n            .then((response) => {\r\n              if (response.status === 200) {\r\n                console.log(\"Login was successful\");\r\n              } else {\r\n                console.log(\"Login in failed\");\r\n              }\r\n              return response.json();\r\n            })\r\n            .then((json) => {\r\n              this.props.setIsAdminTrue(true);\r\n\r\n              if (json !== undefined) {\r\n                this.props.setTeacherProfile(json);\r\n              } else {\r\n                this.props.setTeacherProfile([]);\r\n              }\r\n              this.props.updateToken(json.sessionToken);\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  //This function searches to see if the user has a session token.\r\n  //It then checks the status of isAdmin and pushes user to the appropriate page\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.isAdmin === \"\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={6}\r\n          md={5}\r\n          lg={5}\r\n          className=\"newLanding\"\r\n        ></Grid>\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Hidden smUp>\r\n              <div\r\n                style={{\r\n                  width: \"75vw\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <img className=\"miniImage\" src={World}></img>\r\n              </div>\r\n            </Hidden>\r\n            <Typography\r\n              className=\"marginHome signupTitle\"\r\n              style={{ marginBottom: \"5px\" }}\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n            >\r\n              ServiceTracker\r\n            </Typography>\r\n            <Hidden smUp>\r\n              {\" \"}\r\n              <Typography style={{ fontSize: \"10px\", textAlign: \"center\" }}>\r\n                <p>\r\n                  Easily tracks your hours, so you can focus on{\" \"}\r\n                  <i>doing good.</i>\r\n                </p>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n              {\" \"}\r\n              <Typography style={{ fontSize: \"13px\", textAlign: \"center\" }}>\r\n                {\" \"}\r\n                Easily tracks your hours, so you can focus on <i>\r\n                  doing good.\r\n                </i>{\" \"}\r\n              </Typography>\r\n            </Hidden>\r\n\r\n            <br></br>\r\n\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                {/* <Grid item xs={6} sm={6}></Grid>\r\n                <Grid item xs={6} sm={6}></Grid> */}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                    \r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                  \r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"./admindash\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Member Login\r\n              </Button>\r\n              <br></br>\r\n\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item className=\"smallMarginTop\">\r\n                  <Link to=\"/selectrole\"> {\"Need an account? Sign up\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {/* \r\n        <div\r\n          style={{\r\n            // backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx",["151","152"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//This component directs a user to the proper signup screen -- admin versus user\r\n\r\n\r\n//This function is not currently being called.\r\n//It contains the copyright.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass SelectRole extends React.Component {\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\" style={{ marginTop: \"150px\" }}>\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              style={{ marginTop: \"0px\" }}\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n            >\r\n              Choose Your Account Type:\r\n            </Typography>\r\n            <br></br>\r\n\r\n            <form noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Link to=\"/signup\">\r\n                    <Button\r\n                      style={{ height: \"150px\" }}\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                    >\r\n                      STUDENT\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <Link to=\"/adminsignup\">\r\n                      <Button\r\n                        style={{ height: \"150px\" }}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          {\" \"}\r\n                          TEACHER\r\n                        </Grid>\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid\r\n                  item\r\n                  style={{ marginBottom: \"50px\" }}\r\n                  className=\"smallMarginTop\"\r\n                >\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectRole;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx",["153","154"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Link\r\n } from \"react-router-dom\";\r\n\r\n function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps={\r\n  setClassCode?:any,\r\n  classCode:any,\r\n  sessionToken?:any\r\n}\r\n\r\n\r\nclass StudentPin extends React.Component<AcceptedProps,{}> {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          Find Your Group\r\n        </Typography>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Code\"\r\n                label=\"ENTER CODE \"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setClassCode(e.target.value)\r\n                  console.log(this.props.setClassCode)\r\n              \r\n                }}\r\n                defaultValue={this.props.classCode}\r\n              />\r\n        \r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to= \"/signup\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link  to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx",["155","156","157","158"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Link\r\n \r\n } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\ntype myProps={\r\n  sessionToken:any,\r\n  teacherAccount: any\r\n}\r\n\r\n\r\n\r\nclass TeacherPin extends React.Component<myProps,{}> {\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.teacherAccount.teacherUser?.classId)\r\n  }\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          CLASS CODE:\r\n          {this.props.teacherAccount.teacherUser?.classId}\r\n        </Typography>\r\n        <h5 className=\"signupTitle\"> Students will use this code to join your group. </h5>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <h1 className=\"signupTitle\"></h1>\r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to=\"/chart\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n      \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx",["159","160","161","162","163"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SettingsPowerRounded } from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport API_URL from \"../../../../environment\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\ntype AcceptedProps = {\r\n  setIndexNumber: any;\r\n  sessionToken: any;\r\n  serviceRequests: any;\r\n  setServiceRequests: (e: any) => void;\r\n  indexNumber: any;\r\n  setSpecificEntry: (e: any) => void;\r\n  specificEntry: any;\r\n};\r\n\r\ntype myState = {\r\n  open: any;\r\n  itemId: any;\r\n\r\n  setOpen: (e: any) => void;\r\n};\r\n\r\nexport default class Chart extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemId: 100,\r\n      open: false,\r\n      setOpen: (e) => {\r\n        this.setState({ open: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchServiceRequests();\r\n    console.log(this.props.serviceRequests);\r\n  }\r\n  fetchServiceRequests = () => {\r\n    fetch(`${API_URL}/service`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.props.setServiceRequests(json); //taking information from the server and setting it to our state\r\n        console.log(this.props.serviceRequests);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  deleteEntryAsync2 = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${API_URL}/service/${this.props.indexNumber}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: this.props.sessionToken,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      console.log(json);\r\n      this.fetchServiceRequests();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TableContainer\r\n        // style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}\r\n        style={{marginTop:\"15px\"}}\r\n        component={Paper}\r\n      >\r\n       \r\n            \r\n            <Box style={{ background: \"#ef476f\",color:\"white\", padding: \"0px\", width: \"100%\"}}>\r\n              <Box >\r\n                {\" \"}\r\n              <h2 style={{marginLeft:\"25px\"}}>Service Hours </h2>\r\n      \r\n              <Box\r\n            className=\"studentChart\"\r\n            style={{ background: \"white\", padding: \"0px\" }}\r\n          >\r\n           \r\n            \r\n            <Box className=\"toRight\">\r\n              \r\n              \r\n              {\" \"}\r\n              <ButtonGroup\r\n                style={{ background: \"white\" }}\r\n                className=\"toRight\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                aria-label=\"text primary button group\"\r\n              >\r\n                \r\n                <Link to=\"/addservice\">\r\n                  <Button style={{ color: \"#ef476f\" }}>\r\n                    <AddBoxIcon style={{marginRight: \"5px\"}} /> Add Entry\r\n                  </Button>\r\n                </Link>\r\n            \r\n              </ButtonGroup>\r\n            </Box>\r\n          </Box>\r\n              \r\n              \r\n              \r\n          \r\n              </Box>\r\n            </Box>\r\n        <Table aria-label=\"collapsible table\">\r\n         \r\n          <TableHead>\r\n         \r\n            <TableRow >\r\n              <TableCell />\r\n\r\n              <IconButton size=\"small\">\r\n                <TableCell></TableCell>\r\n              </IconButton>\r\n              <TableCell>Date of Service</TableCell>\r\n              <TableCell>Service Type</TableCell>\r\n             <Hidden xsDown> <TableCell align=\"center\">Hours</TableCell></Hidden>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.serviceRequests.length > 0 ? (\r\n              this.props.serviceRequests.map((service: any, index: any) => (\r\n                <React.Fragment key={this.props.serviceRequests.id}>\r\n                 \r\n                  <TableRow style={{height:\"45px\", marginRight:\"3px\", marginLeft:\"3px\"}}> \r\n                    <TableCell></TableCell>\r\n                    <IconButton\r\n                      aria-label=\"expand row\"\r\n                      size=\"small\"\r\n                      onClick={ (e) => {\r\n                       \r\n                          this.state.itemId !==\r\n                          this.props.serviceRequests[index].id\r\n                            ? this.setState({\r\n                                itemId: this.props.serviceRequests[index].id,\r\n                              })\r\n                            : this.setState({ itemId: 100 });\r\n\r\n                            this.props.setSpecificEntry(\r\n                              this.props.serviceRequests[index]\r\n                            );\r\n                            \r\n                            this.props.setIndexNumber(\r\n                              this.props.serviceRequests[index].id\r\n                            );\r\n\r\n                            \r\n\r\n                            \r\n\r\n                        \r\n                         \r\n                        } }\r\n                    >\r\n                      {this.props.serviceRequests[index].id ===\r\n                      this.state.itemId ? (\r\n                        <KeyboardArrowUpIcon />\r\n                      ) : (\r\n                        <KeyboardArrowDownIcon />\r\n                      )}\r\n                    </IconButton>\r\n                    <TableCell align=\"left\">\r\n                      {\" \"}\r\n                      {this.props.serviceRequests[index]?.date}\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"left\">\r\n                      {this.props.serviceRequests[index]?.typeOfService}{\" \"}\r\n                    </TableCell>\r\n                    <Hidden xsDown>       <TableCell align=\"center\">\r\n                      {this.props.serviceRequests[index]?.hours}{\" \"}\r\n                    </TableCell></Hidden>\r\n              \r\n                    <TableCell align=\"center\" > {this.props.serviceRequests[index]?.status === \"Denied\" ?\r\n                       \r\n                         <FontAwesomeIcon\r\n                                  style={{\r\n                                    backgroundColor: \"white\",\r\n                                    fontSize: \"20px\",\r\n                                    color: \"#ef476f\"\r\n                                  }}\r\n                                  icon={faTimesCircle}\r\n                                />\r\n                   \r\n                 : this.props.serviceRequests[index]?.status === \"Approved\" ?\r\n              \r\n                   <FontAwesomeIcon\r\n                             style={{\r\n                               color: \"#06d6a0\",\r\n                               fontSize: \"20px\",\r\n                             }}\r\n                             icon={faCheckSquare}\r\n                           />\r\n          \r\n                :   <FontAwesomeIcon\r\n                style={{\r\n                  color: \"#ffd166\",\r\n                  fontSize: \"20px\",\r\n                }}\r\n                icon={faQuestionCircle}\r\n              />\r\n\r\n                \r\n                \r\n                }\r\n                 \r\n                 \r\n                  </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      className=\"noPadding\"\r\n                      style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                      colSpan={6}\r\n                      onClick={ () => {\r\n                        this.setState({\r\n                            itemId: this.props.serviceRequests[index].id,\r\n                          })\r\n                        }\r\n                      }\r\n                  \r\n                    >\r\n                      <Collapse\r\n                        in={\r\n                          this.props.serviceRequests[index].id ===\r\n                          this.state.itemId\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <Box style={{ padding: \"5px\" }} margin={1}>\r\n                          <Box className=\"editIcon\">\r\n                            <h5 style={{ marginRight: \"auto\" }}>Details</h5>\r\n                            \r\n                            <Link to=\"/editservice\">\r\n                              <EditIcon style={{ marginRight: \"10px\" }} />\r\n                            </Link>\r\n                            <DeleteIcon\r\n                              onClick={() => {\r\n                                this.deleteEntryAsync2();\r\n                              }}\r\n                            />\r\n                          </Box>\r\n\r\n                          <p style={{ padding: \"15px\" }}>\r\n                          <Hidden smUp>      \r\n                      Hours: {this.props.serviceRequests[index]?.hours} <br></br> Description: \r\n                   </Hidden>\r\n                           {this.props.serviceRequests[index]?.description}\r\n                          </p>\r\n                        </Box>\r\n                      </Collapse>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx",["164","165"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\n\r\n//This component is where an ADMIN would create an account\r\n\r\n//This function displays copyright information.\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  setTeacherProfile: (e: any) => void;\r\n  teacherAccount: any;\r\n};\r\n\r\nclass AdminSignup extends React.Component<AcceptedProps, {}> {\r\n  //This fetch CREATES an Admin account.\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/teacheruser/signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        teacherUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json !== undefined) {\r\n          this.props.setTeacherProfile(json); //taking information from the server and setting it to our state\r\n        } else {\r\n          this.props.setTeacherProfile([]);\r\n        }\r\n        this.props.updateToken(json.sessionToken);\r\n        console.log(this.props.teacherAccount.teacherUser?.classId);\r\n      });\r\n  };\r\n\r\n  //If an Admin account is properly created with a session token the user is redirected to the proper page\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.firstName === undefined) {\r\n      return <Redirect to=\"/adminsignup\" />;\r\n    }\r\n    return <Redirect to=\"/admindash\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              style={{ marginTop: \"100px\" }}\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n            >\r\n              Admin Signup\r\n            </Typography>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    onChange={(e) => {\r\n                      this.props.setFirstName(e.target.value);\r\n                      console.log(this.props.firstName);\r\n                    }}\r\n                    defaultValue={this.props.firstName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                    onChange={(e) => {\r\n                      this.props.setLastName(e.target.value);\r\n                      console.log(this.props.lastName);\r\n                    }}\r\n                    defaultValue={this.props.lastName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                      console.log(this.props.email);\r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                      console.log(this.props.password);\r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/teacherpin\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Admin Sign Up\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid\r\n                  item\r\n                  style={{ marginBottom: \"12px\" }}\r\n                  className=\"smallMarginTop\"\r\n                >\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n     \r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSignup;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Chart from \"../../StudentView/StudentDashboard/StudentViewDashboard/Chart\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ViewEvents from \"../ViewEvents\";\r\nimport API_URL from \"../../../environment\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet percentage = 56;\r\n\r\ntype AcceptedProps = {\r\n  indexNumber: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  sessionToken: any;\r\n  key: any;\r\n  backArrowToggle: any;\r\n  arrowHandler?: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n  clearToken: any;\r\n  isAdmin: any;\r\n  setIsAdminFalse: any;\r\n  serviceRequests: any;\r\n  setServiceRequests: (e: any) => void;\r\n  setIndexNumber: (e: any) => void;\r\n  setSpecificEntry: (e: any) => void;\r\n  specificEntry: any;\r\n};\r\n\r\nlet arr: any = [0];\r\nlet arr2: any = [0];\r\nlet arr3: any = [0];\r\nlet sum: number = 0;\r\nlet sum2: number = 0;\r\nlet sum3: number = 0;\r\nconst add = (a: number, b: number) => a + b;\r\n\r\nclass MyDashboard extends React.Component<AcceptedProps, {}> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n  }\r\n\r\n  checkForToken = () => {\r\n    console.log(this.props.isAdmin);\r\n\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  };\r\n\r\n  percentageUnderReview = () => {\r\n    {\r\n      this.arr3Length();\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? this.props.serviceRequests?.map((service: any, index: any) =>\r\n            arr3.push(\r\n              this.props.serviceRequests[index].status === \"Pending\"\r\n                ? this.props.serviceRequests[index].hours\r\n                : 0\r\n            )\r\n          )\r\n        : console.log(\"did not work\");\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? (sum3 = arr3.reduce(add))\r\n        : (sum3 = 0);\r\n    }\r\n  };\r\n\r\n  percentageDenied = () => {\r\n    {\r\n      this.arr2Length();\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? this.props.serviceRequests?.map((service: any, index: any) =>\r\n            arr2.push(\r\n              this.props.serviceRequests[index].status === \"Denied\"\r\n                ? this.props.serviceRequests[index].hours\r\n                : 0\r\n            )\r\n          )\r\n        : console.log(\"did not work\");\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? (sum2 = arr2.reduce(add))\r\n        : (sum2 = 0);\r\n    }\r\n  };\r\n\r\n  percentage = () => {\r\n    {\r\n      this.arrLength();\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? this.props.serviceRequests?.map((service: any, index: any) =>\r\n            arr.push(\r\n              this.props.serviceRequests[index].status === \"Approved\"\r\n                ? this.props.serviceRequests[index].hours\r\n                : 0\r\n            )\r\n          )\r\n        : console.log(\"did not work\");\r\n    }\r\n    {\r\n      this.props.serviceRequests.length > 0\r\n        ? (sum = arr.reduce(add))\r\n        : (sum = 0);\r\n    }\r\n  };\r\n\r\n  fetchServiceRequests = () => {\r\n    fetch(`${API_URL}/service`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.props.setServiceRequests(json); //taking information from the server and setting it to our state\r\n        console.log(this.props.serviceRequests);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.firstName);\r\n    this.props.setBackArrowToggle(false);\r\n    this.props.setIsAdminFalse(false);\r\n    this.arrLength();\r\n    this.fetchServiceRequests();\r\n    this.percentage();\r\n    this.checkForToken();\r\n  }\r\n\r\n  arrLength = () => {\r\n    arr.length = 0;\r\n  };\r\n\r\n  arr2Length = () => {\r\n    arr2.length = 0;\r\n  };\r\n\r\n  arr3Length = () => {\r\n    arr3.length = 0;\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Sitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          // arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Grid container className=\"studentContainer\" component=\"main\">\r\n          <Grid item xs={12} sm={12} md={12} lg={12}>\r\n            <Typography\r\n              className=\"signupTitle marginStudentDash\"\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n            >\r\n              Student Dashboard\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={false} sm={false} md={1} lg={1}>   </Grid> */}\r\n\r\n          <Grid item xs={12} sm={3} md={3} lg={3}>\r\n            <div className=\"blueDiv\">\r\n              <Box className=\"progressCircle\">\r\n                <CircularProgressbar\r\n                  styles={{\r\n                    path: { stroke: \"#06d6a0\" },\r\n                    text: { fill: \"black\" },\r\n                  }}\r\n                  value={(sum / 30) * 100}\r\n                  text={`${sum}/30` }\r\n                \r\n                />\r\n                <Grid container component=\"main\">\r\n                \r\n                  \r\n                  </Grid>\r\n                  <Hidden xsDown>  <Card style={{marginTop:\"20px\", backgroundColor: \"#fafafa\"}}>\r\n      <CardContent>\r\n    \r\n    \r\n        <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\r\n         Current Totals\r\n          <br/><br/>\r\n         {sum}  Approved \r\n          <br/>\r\n         {sum2}  Denied \r\n          <br/>\r\n          \r\n          {sum3}  Pending \r\n          <br/>\r\n         \r\n        </Typography>\r\n      </CardContent>\r\n  \r\n    </Card></Hidden>\r\n                \r\n             \r\n              </Box>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ backgroundColor: \"#fafafa\" }}\r\n            item\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            lg={7}\r\n          >\r\n            <Box className=\"studentDash\">\r\n          \r\n              <Box className=\"studentChart\">\r\n                <ViewEvents\r\n                  setBackArrowToggle={this.props.setBackArrowToggle}\r\n                  setIsAdminFalse={this.props.setIsAdminFalse}\r\n                  isAdmin={this.props.isAdmin}\r\n                  backArrowToggle={this.props.backArrowToggle}\r\n                  // arrowHandler={this.arrowHandler}\r\n                  clearToken={this.props.clearToken}\r\n                  sessionToken={this.props.sessionToken}\r\n                />\r\n                <Chart\r\n                  serviceRequests={this.props.serviceRequests}\r\n                  setServiceRequests={this.props.setServiceRequests}\r\n                  sessionToken={this.props.sessionToken}\r\n                  setIndexNumber={this.props.setIndexNumber}\r\n                  indexNumber={this.props.indexNumber}\r\n                  specificEntry={this.props.specificEntry}\r\n                  setSpecificEntry={this.props.setSpecificEntry}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n  \r\n        {this.checkForToken()}\r\n        {this.percentage()}\r\n        {this.arrLength()}\r\n        {this.percentageDenied()}\r\n        {this.percentageUnderReview()}\r\n        {this.arr2Length()}\r\n        {this.arr3Length()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyDashboard;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx",["183","184","185"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport API_URL from \"../../environment\";\r\n\r\n// type myState = {\r\n//   anchorE1: any;\r\n//   setAnchorE1: (e: any) => void;\r\n// };\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass Sitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`${API_URL}/user/delete`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Profile is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class entries are deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  \r\n  \r\n  }\r\n\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar style={{backgroundColor:\"white\"}}  >\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          \r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/myDashboard\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Link>\r\n            ) : (\r\n              <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\r\n           \r\n             \r\n           >ServiceTracker</IconButton>\r\n            )}\r\n\r\n          \r\n            <div>\r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"black\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout \r\n                </MenuItem>\r\n                <MenuItem   onClick={() => {\r\n                    this.deleteUser();\r\n                    this.props.clearToken();\r\n                  }}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx",["186"],"import React, { Component } from \"react\";\r\n\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport API_URL from \"../../../environment\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//This component enables students to ADD service entries for approval\r\n\r\ntype AcceptedProps = {\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminFalse: any;\r\n  isAdmin: any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  clearToken: any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n  status: any;\r\n  studentUserId: any;\r\n  setDate: (e: any) => void;\r\n  setTypeOfService: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setStatus: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  serviceUpdate: boolean;\r\n  setServiceUpdate: (e: any) => void;\r\n};\r\n\r\nclass AddServiceHours extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      serviceUpdate: false,\r\n      setServiceUpdate: (e) => {\r\n        this.setState({ serviceUpdate: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  // ComponentDidMount: \r\n  //1) Keeps back arrow off of landing page sitebar \r\n  //2. If page refreshes, the user will be brought back to this page\r\n  componentDidMount() {\r\n    this.props.setBackArrowToggle(true);\r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  //This submit enables a user to post a new service entry\r\n  //In the fetch a few things are happening\r\n  //1. Entry posts to database\r\n  //2. serviceUpdate value is set to true- thus redirecting to /mydashboard\r\n  //3. setting prop values back to zero\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/service`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        service: {\r\n          date: this.props.date,\r\n          typeOfService: this.props.typeOfService,\r\n          description: this.props.description,\r\n          hours: this.props.hours,\r\n          status: this.props.status,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service submission was successful\");\r\n        this.state.setServiceUpdate(true);\r\n        //set each prop to empty\r\n        this.props.setDate(\"\");\r\n        this.props.setHours(0);\r\n        this.props.setTypeOfService(\"\");\r\n        this.props.setDescription(\"\");\r\n      } else {\r\n        console.log(\"Service submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  //When an entry is successful posted, the user\r\n  //is brought back to student dashboard\r\n  checkForServiceEntry = () => {\r\n    if (this.state.serviceUpdate) {\r\n      return <Redirect to=\"/mydashboard\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container\r\n          style={{\r\n            paddingLeft: \"40px\",\r\n            paddingRight: \"40px\",\r\n            marginTop: \"100px\",\r\n          }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography component=\"h1\" variant=\"h4\" className=\"signupTitle\">\r\n              Add Service Entry\r\n            </Typography>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setDate(e.target.value);\r\n                        console.log(this.props.date);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Type of Service\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setTypeOfService(e.target.value);\r\n                        console.log(this.props.typeOfService);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={\" \"}\r\n                    >\r\n                      <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\r\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\r\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\r\n                        NJHS Sponsored Event\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Volunteering\"}>Volunteering</MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description of Service\"\r\n                    id=\"text\"\r\n                    onChange={(e) => {\r\n                      this.props.setDescription(e.target.value);\r\n                      console.log(this.props.description);\r\n                    }}\r\n                    defaultValue={\" \"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Number of Hours\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setHours(e.target.value);\r\n                        console.log(this.props.hours);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    >\r\n                      <MenuItem value={1}>1 hour </MenuItem>\r\n                      <MenuItem value={2}>2 hours </MenuItem>\r\n                      <MenuItem value={3}>3 hours</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                <h3>Submit</h3>\r\n              </Button>\r\n              {/* </Link> */}\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {console.log(this.props.typeOfService)}\r\n        {console.log(this.props.hours)}\r\n        {console.log(this.props.description)}\r\n        {this.checkForServiceEntry()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddServiceHours;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx",["187","188"],"import React, { Component } from \"react\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API_URL from \"../../../environment\";\r\n\r\ntype AcceptedProps = {\r\n  indexNumber:any;\r\n  setIsAdminFalse: any;\r\n  isAdmin:any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n  status: any;\r\n  studentUserId: any;\r\n  serviceRequests: any;\r\n  setDate: (e: any) => void;\r\n  setTypeOfService: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setStatus: (e: any) => void;\r\n  setServiceRequests: (e: any) => void;\r\n  setSpecificEntry?:(e:any)=>void;\r\n  specificEntry?:any;\r\n  setBackArrowToggle:(e:any)=>void; \r\n};\r\n\r\ntype myState={\r\n  serviceUpdate:boolean;\r\n  setServiceUpdate:(e:any)=> void;\r\n  setEntryById:(e:any)=> void;\r\n  setDate:(e:any)=> void;\r\n  setTypeOfService:(e:any)=> void;\r\n  setDescription:(e:any)=> void;\r\n  setHours:(e:any)=> void;\r\n  entryById:any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n}\r\n\r\n\r\n\r\nclass UpdateServiceHours extends React.Component <AcceptedProps, myState>{\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      serviceUpdate:false,\r\n      setServiceUpdate: (e) => {this.setState({serviceUpdate: e})},\r\n      entryById: [],\r\n      setEntryById: (e) => {this.setState({entryById: e})},\r\n      date: \"\",\r\n      setDate: (e) => {this.setState({date: e})},\r\n      typeOfService: \"\",\r\n      setTypeOfService: (e) => {this.setState({typeOfService: e})},\r\n      description: \"\",\r\n      setDescription: (e) => {this.setState({description: e})},\r\n      hours: 0,\r\n      setHours: (e) => {this.setState({hours: e})},\r\n    };\r\n \r\n  }\r\n  fetchServiceRequests = () =>{\r\n    fetch(`${API_URL}/service/${this.props.indexNumber}`, {\r\n        method: 'GET',\r\n        headers: new Headers ({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    }).then((res=> res.json()))\r\n    .then((json) => {\r\n      this.state.setEntryById(json);\r\n      this.state.setHours(json.hours);\r\n      this.state.setTypeOfService(json.typeOfService);\r\n      this.state.setDescription(json.description);\r\n      this.state.setDate(json.date)\r\n      console.log(this.state.entryById)\r\n        // console.log(json)\r\n        // this.props.setServiceRequests(json) //taking information from the server and setting it to our state\r\n        // console.log(this.props.indexNumber)\r\n        \r\n    })\r\n}\r\n\r\n//When the page loads run another fetch GET request BY ID (indexNumber) Get 1 by id in controller\r\n//local state variables this.state.hours\r\n//this makes it so variables aren't fighting one another We can use local state variables here so it doesn't hold onto old information\r\n\r\n//Another option is to make the update button disabled until a user updates a value. When something is changed in the text box a clicker ticks up 1 and then it can be clicked\r\n\r\n\r\n// ${this.props.serviceRequests.id}\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n  \r\n    type serviceInterface = {\r\n      date?: string, \r\n      typeOfService?: string,\r\n      description?: string,\r\n      hours?: number,\r\n      status?: string\r\n\r\n    }\r\n\r\n    let service: serviceInterface={};\r\n    // service.date= \"\";\r\n    \r\n\r\n\r\n    // if(this.props.date !== \"\"){\r\n    //   service.date= this.state.entryById.date\r\n    // } else{service.date= this.state.date}\r\n\r\n    // if(this.props.typeOfService !== \"\"){\r\n    //   service.typeOfService= this.state.entryById.typeOfService\r\n    // }else{service.typeOfService= this.state.typeOfService}\r\n\r\n    // if(this.props.description !== \"\"){\r\n    //   service.description= this.state.entryById.description\r\n    // }else{service.description= this.state.description}\r\n\r\n    // if(this.props.hours !== 0){\r\n    //   service.hours= this.state.entryById.hours\r\n    // }else{service.hours= this.state.hours}\r\n\r\n    fetch(`${API_URL}/service/${this.props.indexNumber}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        // service\r\n        service: {\r\n          date: this.state.date,\r\n          typeOfService: this.state.typeOfService,\r\n          description: this.state.description,\r\n          hours: this.state.hours,\r\n          status: this.props.status,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service update was successful\");\r\n        this.state.setServiceUpdate(true);\r\n        console.log(response)\r\n        \r\n     \r\n        \r\n      } else {\r\n        console.log(\"Service update failed\");\r\n      }\r\n      return response.json();\r\n      \r\n    });\r\n \r\n  };\r\n\r\n  checkForProfile=() => {\r\n    if (this.state.serviceUpdate){\r\n      return <Redirect to=\"/mydashboard\"/>\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setBackArrowToggle(true) \r\n    this.props.setIsAdminFalse(false);\r\n    this.fetchServiceRequests()\r\n    console.log(this.props.serviceRequests)\r\n    console.log(this.props.indexNumber)\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sitebar\r\n              backArrowToggle={this.props.backArrowToggle}\r\n              // arrowHandler={this.props.arrowHandler}\r\n              clearToken={this.props.clearToken}\r\n              sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container\r\n          style={{ paddingLeft: \"40px\", paddingRight: \"40px\", marginTop:\"100px\" }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <div  style={{ marginTop: \"25px\" }}>\r\n          <Typography component=\"h1\" variant=\"h4\" className=\"signupTitle\">\r\n              Edit Service Entry\r\n            </Typography>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      style={{width: \"200px\"}}\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setDate(e.target.value);\r\n                        console.log(this.state.date);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.date}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Type of Service\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setTypeOfService(e.target.value);\r\n                        console.log(this.state.entryById.typeOfService);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.typeOfService}\r\n                    >\r\n                       <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\r\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\r\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\r\n                        NJHS Sponsored Event\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Volunteering\"}>\r\n                        Volunteering\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"description\"\r\n                  label=\"Description of Service\"\r\n                  id=\"text\"\r\n                  onChange={(e) => {\r\n                    console.log(e.target.value)\r\n                    this.state.setDescription(e.target.value);\r\n                    console.log(this.props.description);\r\n                    console.log(this.props.specificEntry)\r\n                    console.log(this.props.indexNumber)\r\n                  }}\r\n                  defaultValue={this.props.specificEntry.description}\r\n                 \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Number of Hours\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setHours(e.target.value);\r\n                        console.log(this.props.hours);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.hours}\r\n                    >\r\n                      <MenuItem value={1}>1 hour </MenuItem>\r\n                      <MenuItem value={2}>2 hours </MenuItem>\r\n                      <MenuItem value={3}>3 hours</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  style={{backgroundColor: \"#ef476f\", color: \"white\"}}\r\n                  //if less than one diabled \r\n                >\r\n                  UPDATE\r\n                </Button>\r\n              {/* </Link> */}\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {console.log(this.props.serviceRequests)}\r\n        {console.log(this.props.typeOfService)}\r\n        {console.log(this.props.specificEntry)}\r\n        \r\n       \r\n        {this.checkForProfile()}\r\n      </div>\r\n    );\r\n    \r\n  }\r\n \r\n}\r\n\r\nexport default UpdateServiceHours;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx",["189","190","191","192","193","194","195","196","197"],"import React, {Component} from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Sitebar from '../Sitebar/Sitebar';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {   \r\n \r\n  setIsAdminFalse: any;\r\n  isAdmin:any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventInfo: any;\r\n  setEventInfo: (e: any) => void;\r\n};\r\n\r\nclass ViewEvents extends React.Component  <AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventInfo: [],\r\n      setEventInfo: (entry) => {\r\n        this.setState({ eventInfo: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setBackArrowToggle(true);\r\n    this.fetchService();\r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  fetchService = () => {\r\n    fetch(`${API_URL}/events/studentview`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.state.setEventInfo(json);\r\n        console.log(this.state.eventInfo);\r\n      });\r\n  };\r\n\r\n  \r\n    render() { \r\n        return (   <div>\r\n          {\" \"}\r\n          {/* <Sitebar\r\n            backArrowToggle={this.props.backArrowToggle}\r\n            // arrowHandler={this.props.arrowHandler}\r\n            clearToken={this.props.clearToken}\r\n            sessionToken={this.props.sessionToken}\r\n          />{\" \"} */}\r\n          {/* <h2\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"50px\",\r\n              marginBottom: \"50px\",\r\n            }}\r\n          >\r\n            Upcoming Service Opportunities\r\n          </h2> */}\r\n         \r\n          <div className=\"viewEvents\">\r\n            \r\n            <Box style={{ background: \"#5390d9\", color:\"white\", padding: \"0px\", width: \"100%\" }}>\r\n              <Box >\r\n                {\" \"}\r\n              <h2 style={{marginLeft:\"25px\"}}>Upcoming Events</h2>\r\n                {/* <ButtonGroup\r\n                  style={{ color: \"black\" }}\r\n                  className=\"toRight\"\r\n                  disableElevation\r\n                  variant=\"contained\"\r\n                  aria-label=\"text primary button group\"\r\n                >\r\n                  <Link to=\"/addevents\">\r\n                    <Button style={{ color: \"black\", marginLeft: \"60px\" }}>\r\n                     \r\n                    </Button>\r\n                  </Link>\r\n                </ButtonGroup> */}\r\n              </Box>\r\n            </Box>\r\n            {this.state.eventInfo.length > 0 ? (\r\n              this.state.eventInfo.map((event: any, index: any) => (\r\n                <Accordion style={{ margin: \".5px\" }} key={this.state.eventInfo.id} square>\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                  \r\n                    <Typography style={{ marginLeft: \"15px\" }}>\r\n                      {this.state.eventInfo[index].date} \r\n          \r\n                    </Typography>\r\n                    <Typography style={{ marginLeft: \"45px\" }}>\r\n                     \r\n                      {this.state.eventInfo[index].title}\r\n                    </Typography>\r\n                    <div style={{ marginLeft: \"auto\" }}>\r\n                     \r\n                    </div>\r\n                  </AccordionSummary>\r\n              <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                  \r\n                \r\n                  <Typography>\r\n                      <p style={{ fontSize: \"12px\", marginRight:\"100px\"   }}>Location: {this.state.eventInfo[index].location} </p>\r\n                      <p style={{ fontSize: \"12px\" }}>Hours: {this.state.eventInfo[index].hours} </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      \r\n                    </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n     \r\n    \r\n                  \r\n                  \r\n                </AccordionDetails>\r\n  \r\n                \r\n               \r\n     \r\n                  <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                    <Typography>\r\n                      <p style={{ fontSize: \"12px\" }}>Event Description:</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                  <AccordionDetails>\r\n                    <Typography>\r\n                      <p style={{  fontSize: \"12px\", padding:\"0px 15px\" }}> {this.state.eventInfo[index].description}</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))\r\n            ) : (\r\n              <div style={{marginTop: \"30px\"}}> There are no upcoming events. </div>\r\n            )}\r\n          </div>\r\n          {console.log(this.state.eventInfo.title)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\nexport default ViewEvents;","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx",["198","199","200","201","202"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx",["203","204","205"],"import React, { Component } from \"react\";\r\n\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AddEvents from \"./AddEvents\";\r\nimport UpdateEvent from \"./UpdateEvents\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport API_URL from \"../../../environment\";\r\n\r\n\r\n//This component shows the Events that are currently scheduled\r\n//This component also has links to EDIT EVENTS & ADD EVENTS\r\n// Delete functionality is also built in here\r\n\r\ntype AcceptedProps = {\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminTrue: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventInfo: any;\r\n  setEventInfo: (e: any) => void;\r\n  eventId: any;\r\n  setEventId: (e: any) => void;\r\n  date: any;\r\n  setDate: (e: any) => void;\r\n  title: any;\r\n  setTitle: (e: any) => void;\r\n  description: any;\r\n  setDescription: (e: any) => void;\r\n  location: any;\r\n  setLocation: (e: any) => void;\r\n  hours: any;\r\n  setHours: (e: any) => void;\r\n\r\n  setOpen: (e: any) => void;\r\n  open: any;\r\n  setOpen2: (e: any) => void;\r\n  open2: any;\r\n  oneEvent: any;\r\n  setOneEvent: (e: any) => void;\r\n  eventInfoIndex: any;\r\n  setEventInfoIndex: (e: any) => void;\r\n};\r\n\r\nclass EventSchedule extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      hours: \"\",\r\n      setHours: (entry) => {\r\n        this.setState({ hours: entry });\r\n      },\r\n      location: \"\",\r\n      setLocation: (entry) => {\r\n        this.setState({ location: entry });\r\n      },\r\n      description: \"\",\r\n      setDescription: (entry) => {\r\n        this.setState({ description: entry });\r\n      },\r\n      eventInfoIndex: [],\r\n      setEventInfoIndex: (entry) => {\r\n        this.setState({ eventInfoIndex: entry });\r\n      },\r\n      date: \"\",\r\n      setDate: (entry) => {\r\n        this.setState({ date: entry });\r\n      },\r\n      title: \"\",\r\n      setTitle: (entry) => {\r\n        this.setState({ title: entry });\r\n      },\r\n      oneEvent: [],\r\n      eventInfo: [],\r\n      setOneEvent: (entry) => {\r\n        this.setState({ oneEvent: entry });\r\n      },\r\n      setEventInfo: (entry) => {\r\n        this.setState({ eventInfo: entry });\r\n      },\r\n      eventId: 900,\r\n      setEventId: (entry) => {\r\n        this.setState({ eventId: entry });\r\n      },\r\n      open: false,\r\n      setOpen: (entry) => {\r\n        this.setState({ open: entry });\r\n      },\r\n      open2: false,\r\n      setOpen2: (entry) => {\r\n        this.setState({ open2: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  //This function opens up ADD EVENTS modal\r\n  handleClickOpen = () => {\r\n    this.state.setOpen(true);\r\n  };\r\n\r\n  //This function opens up the UPDATE EVENTS modal\r\n  handleClickOpen2 = () => {\r\n    this.state.setOpen2(true);\r\n  };\r\n\r\n  //This function closes the ADD EVENTS modal\r\n  handleClickClose = () => {\r\n    this.state.setOpen(false);\r\n  };\r\n\r\n  //When the component loads:\r\n  //1. Admin is set as true. AKA If a user refreshes the page, they will be\r\n  //redirected to admin landing\r\n  //2. Events are fetched, so the table can be populated\r\n  componentDidMount() {\r\n    this.props.setIsAdminTrue(true);\r\n    this.fetchEvents();\r\n  }\r\n\r\n  //This function deletes a specific event when the user clicks trashcan\r\n  //After deleting the event, fetchEvents() is called, to get updated info\r\n  deleteEvent = async (id: number) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/events/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: this.props.sessionToken,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      console.log(json);\r\n\r\n      \r\n      this.fetchEvents();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //This fetch is specifically used to populate the chart\r\n  fetchEvents = () => {\r\n    fetch(`${API_URL}/events`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.state.setEventInfo(json);\r\n        console.log(this.state.eventInfo);\r\n      });\r\n  };\r\n\r\n  //This fetch is called when the button is clicked and pulls info for individual event\r\n  //Notice that it takes an argument that is specified down in the return\r\n  //------This allow us to actually select a specific event\r\n  //After the fetch is run, we update the state of all our variables\r\n  //------This ensures that we have the most up-to-date info\r\n  //------ when autopopulating our PUT form\r\n  //-------It also makes sure that if a user only updates one detail\r\n  //-------the rest of the items will have a value and not be blank\r\n\r\n  fetchEventRequests = (id: any) => {\r\n    fetch(`${API_URL}/events/${id}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.date);\r\n        this.state.setOneEvent(json);\r\n        this.state.setDate(this.state.eventInfoIndex.date);\r\n        this.state.setTitle(this.state.eventInfoIndex.title);\r\n        this.state.setDescription(this.state.eventInfoIndex.description);\r\n        this.state.setLocation(this.state.eventInfoIndex.location);\r\n        this.state.setHours(this.state.eventInfoIndex.hours);\r\n        console.log(this.state.oneEvent);\r\n        console.log(this.state.date);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n    \r\n        <div></div>\r\n        <div className=\"viewEvents responsiveMarginTopAdmin\"  >\r\n\r\n          <Box style={{ background: \"#fafafa\", padding: \"0px\",  marginLeft:\"auto\" }}>\r\n          <Typography\r\n          className=\"adminTitle \"\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          style={{ textAlign: \"center\", height:\"50px\", paddingLeft:\"30px\",  color: \"black\" }}\r\n        >\r\n          Upcoming Events \r\n        </Typography>\r\n            \r\n            <Box >\r\n    \r\n              <div\r\n                style={{  width: \"100%\", display:\"flex\"}}\r\n                className=\"toRight\"\r\n                \r\n      \r\n              >\r\n\r\n\r\n                <Button  variant=\"contained\"    style={{ backgroundColor:\"#5390d9\", color:\"white\", width:\"150px\" }}>\r\n                  <AddBoxIcon\r\n                    onClick={() => {\r\n                      this.handleClickOpen();\r\n                    }}\r\n                  /> <h5 style={{ color:\"white\",  marginLeft:\"5px\"  }}>Add Event</h5> \r\n                </Button>\r\n              </div>\r\n            </Box>\r\n          </Box>\r\n          {this.state.eventInfo.length > 0 ? (\r\n            this.state.eventInfo.map((event: any, index: any) => (\r\n              <Accordion\r\n                style={{ margin: \"0px\", backgroundColor: \"white\" }}\r\n                key={this.state.eventInfo.id}\r\n                square\r\n              >\r\n                <AccordionSummary\r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                >\r\n                  <Typography style={{ marginLeft: \"5px\" }}>\r\n                  {this.state.eventInfo[index].date} \r\n            \r\n                   \r\n                    \r\n                  </Typography>\r\n                  <Typography style={{ marginLeft: \"55px\" }}>\r\n                \r\n                  {this.state.eventInfo[index].title} <br></br>\r\n                   \r\n                    \r\n                  </Typography>\r\n               \r\n                  <div style={{ marginLeft: \"auto\" }}>\r\n                  {/* On this icon a few things are happening:\r\n                  1. The modal opens. \r\n                  2. I'm storing the value of the index to a variable, so I can use this in UpdateEvents.tsx \r\n                  3. I'm sending the id of this entry to fetchEventRequests, so I can collect & store all info related to this id */}\r\n                    <EditIcon\r\n                      onClick={() => {\r\n                        this.handleClickOpen2();\r\n\r\n                        this.state.setEventInfoIndex(\r\n                          this.state.eventInfo[index]\r\n                        );\r\n                        this.fetchEventRequests(\r\n                          this.state.eventInfo[index]?.id\r\n                        );\r\n                      \r\n                      }}\r\n                    />\r\n                    {/* To get the delete icon working, I need to be able to access the id of the specific event. I do this by passing the id into the deleteEvent function as an argument.  */}\r\n                    <DeleteIcon\r\n                      onClick={() => {\r\n                        try {\r\n                          this.deleteEvent(this.state.eventInfo[index]?.id);\r\n                        \r\n                        } catch (err) {\r\n                          console.log(err);\r\n                        }\r\n                      }}\r\n                    />\r\n\r\n                    <div>\r\n                      <UpdateEvent\r\n                        hours={this.state.hours}\r\n                        setHours={this.state.setHours}\r\n                        location={this.state.location}\r\n                        setLocation={this.state.setLocation}\r\n                        title={this.state.title}\r\n                        setDate={this.state.setDate}\r\n                        setTitle={this.state.setTitle}\r\n                        setDescription={this.state.setDescription}\r\n                        description={this.state.description}\r\n                        open2={this.state.open2}\r\n                        date={this.state.date}\r\n                        eventInfo={this.state.eventInfo}\r\n                        eventInfoIndex={this.state.eventInfoIndex}\r\n                        setOpen2={this.state.setOpen2}\r\n                        sessionToken={this.props.sessionToken}\r\n                        fetchEvents={this.fetchEvents}\r\n                        oneEvent={this.state.oneEvent}\r\n                      />\r\n                      <AddEvents\r\n                        fetchEvents={this.fetchEvents}\r\n                        open={this.state.open}\r\n                        eventInfo={this.state.eventInfo}\r\n                        setOpen={this.state.setOpen}\r\n                        sessionToken={this.props.sessionToken}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </AccordionSummary>\r\n                <AccordionDetails style={{ padding: \"0px 30px\" }}>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginRight:\"45px\" }}>\r\n                    Location: {this.state.eventInfo[index].location} \r\n            \r\n                    </p>\r\n                  </Typography>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\" }}>\r\n               \r\n                    Hours:     {this.state.eventInfo[index].hours}\r\n                    </p>\r\n                  </Typography>\r\n                  {/* <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"100px\" }}>\r\n                      Location:{\" \"}\r\n                    </p>\r\n                  </Typography> */}\r\n          \r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n\r\n           \r\n    \r\n                </AccordionDetails>\r\n\r\n                <AccordionDetails style={{ padding: \"0px 30px\" }}>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\" }}>Event Description:</p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", padding: \"0px 15px\" }}>\r\n                      {\" \"}\r\n                      {this.state.eventInfo[index].description}\r\n                    </p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))\r\n          ) : (\r\n            <div style={{marginTop: \"30px\"}}>\r\n              You currently have no events scheduled.\r\n              {/* I needed to put AddEvents here as well. Otherwise, the modal won't open unless a user has already created events */}\r\n              <AddEvents\r\n                fetchEvents={this.fetchEvents}\r\n                open={this.state.open}\r\n                eventInfo={this.state.eventInfo}\r\n                setOpen={this.state.setOpen}\r\n                sessionToken={this.props.sessionToken}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventSchedule;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx",["206","207","208","209"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n  setViewManageHours:  (e: any) => void;\r\n  setViewStudentAccount:  (e: any) => void;\r\n  setViewEventSchedule:  (e: any) => void;\r\n  setViewSearch:  (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass AdminSitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`${API_URL}/teacherUser/deleteadmin`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Teacher is deleted')\r\n         \r\n        \r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclass`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class entries are deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  }\r\n  \r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar style={{backgroundColor:\"white\"}} position=\"absolute\">\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\r\n             onClick={() => {\r\n              this.props.setViewSearch(false );\r\n              this.props.setViewManageHours(false );\r\n              this.props.setViewEventSchedule(false );\r\n              this.props.setViewStudentAccount(false );\r\n           \r\n            }}\r\n          \r\n            \r\n          >ServiceTracker</IconButton>\r\n            \r\n\r\n{/*       \r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/adminDash\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"black\" }} />\r\n                </IconButton>\r\n                \r\n              </Link>\r\n            ) : (\r\n              <div></div>\r\n            )} */}\r\n          \r\n            <div>\r\n        \r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"black\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </MenuItem>\r\n                <MenuItem onClick={()=>{this.deleteUser();  this.props.clearToken();}}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n   \r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx",["210","211","212","213","214","215"],"import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport EditStudentAccounts from \"../AdminView/EditStudentAccounts\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  classCode?: any;\r\n  teacherAccount: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminTrue: (e: any) => void;\r\n};\r\n\r\ntype MyState = {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  setFirstName: (e: any) => void;\r\n  setLastName: (e: any) => void;\r\n  setEmail: (e: any) => void;\r\n  setPassword: (e: any) => void;\r\n  studentAccounts: any;\r\n  setStudentAccounts: (e: any) => void;\r\n  userId: any;\r\n  setUserId: (e: any) => void;\r\n  setOpen: (e: any) => void;\r\n  open: boolean;\r\n  oneStudent: any;\r\n  setOneStudent: (e: any) => void;\r\n};\r\n\r\nclass ManageAccounts extends React.Component<AcceptedProps, MyState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      oneStudent: [],\r\n      setOneStudent: (entry) => {\r\n        this.setState({ oneStudent: entry });\r\n      },\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      setFirstName: (entry) => {\r\n        this.setState({ firstName: entry });\r\n      },\r\n      setLastName: (entry) => {\r\n        this.setState({ lastName: entry });\r\n      },\r\n      setEmail: (entry) => {\r\n        this.setState({ email: entry });\r\n      },\r\n      setPassword: (entry) => {\r\n        this.setState({ password: entry });\r\n      },\r\n\r\n      userId: 800,\r\n      setUserId: (entry) => {\r\n        this.setState({ userId: entry });\r\n      },\r\n      open: false,\r\n      setOpen: (entry) => {\r\n        this.setState({ open: entry });\r\n      },\r\n\r\n      studentAccounts: [],\r\n      setStudentAccounts: (entry) => {\r\n        this.setState({ studentAccounts: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.state.setOpen(true);\r\n  };\r\n\r\n  handleClickClose = () => {\r\n    this.state.setOpen(false);\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.props.arrowHandler();\r\n    // this.props.setBackArrowToggle(true);\r\n    this.props.setIsAdminTrue(true);\r\n\r\n    this.fetchTeacherData();\r\n  }\r\n\r\n  //This function takes the argument id which is passed into the deleteEntryAsync2 function on line 140. The argument being passed into this function is the id associated with user name\r\n\r\n  deleteEntryAsync2 = async (id: number) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/user/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: this.props.sessionToken,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      console.log(json);\r\n\r\n      this.props.setBackArrowToggle(true);\r\n      this.fetchTeacherData();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //This fetch gets all information linked to the classId that is logged in. I then took the list of students and set it to the variable studentData. This is the variable I will use to map over the page.\r\n  fetchTeacherData = () => {\r\n    fetch(`${API_URL}/user/all`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.classId);\r\n        this.state.setStudentAccounts(json);\r\n        console.log(this.state.studentAccounts);\r\n      });\r\n  };\r\n\r\n  fetchSpecificStudent = (id: any) => {\r\n    fetch(`${API_URL}/user/${id}`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.date);\r\n        this.state.setOneStudent(json);\r\n        this.state.setFirstName(this.state.userId.firstName);\r\n        this.state.setLastName(this.state.userId.lastName);\r\n        this.state.setEmail(this.state.userId.email);\r\n        this.state.setPassword(this.state.userId.password);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n \r\n\r\n        <Container\r\n          maxWidth=\"lg\"\r\n          style={{ height: \"100vh\", paddingLeft:\"0\"}}\r\n          className=\"studentAccounts manageAccountMarginTop\"\r\n        >\r\n          {\" \"}\r\n          <Typography\r\n            className=\"adminTitle \"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              paddingTop: \"30px\",\r\n              color: \"black\",\r\n            }}\r\n          >\r\n            Student Accounts\r\n          </Typography>\r\n          {this.state.studentAccounts.length > 0 ? (\r\n            this.state.studentAccounts.map((service: any, index: any) => (\r\n              <Box style={{padding:\"0px\"}} width=\"auto\" className=\"manageAccountMarginLeft\" key={this.state.studentAccounts.id}>\r\n                <List  style={{padding:\"3px\"}} component=\"nav\" aria-label=\"main mailbox folders\"></List>\r\n                <ListItem style={{backgroundColor:\"white\"}} className=\"accountRows\" button>\r\n        \r\n        \r\n                  <ListItemText style={{padding:\"0px\"}}>\r\n                    <h4 style={{ display: \"inline\" }}>\r\n                      {\" \"}\r\n                      {this.state.studentAccounts[index]?.firstName +\r\n                        \" \" +\r\n                        this.state.studentAccounts[index]?.lastName}{\" \"}\r\n                    </h4>\r\n                    <div style={{ display: \"inline\" }}>\r\n                      {\" \"}\r\n                \r\n                    \r\n                    </div>{\" \"}\r\n                   {\" \"}\r\n                    <br></br>\r\n                    {this.state.studentAccounts[index]?.email}\r\n                  \r\n                  </ListItemText>\r\n         \r\n                  <div style={{padding:\"0px\"}}>\r\n                    <EditStudentAccounts\r\n                      setFirstName={this.state.setFirstName}\r\n                      setLastName={this.state.setLastName}\r\n                      setEmail={this.state.setEmail}\r\n                      setPassword={this.state.setPassword}\r\n                      fetchTeacherData={this.fetchTeacherData}\r\n                      open={this.state.open}\r\n                      userId={this.state.userId}\r\n                      setOpen={this.state.setOpen}\r\n                      sessionToken={this.props.sessionToken}\r\n                      firstName={this.state.firstName}\r\n                      lastName={this.state.lastName}\r\n                      email={this.state.email}\r\n                      password={this.state.password}\r\n                    />\r\n                  </div>\r\n         \r\n                <EditIcon\r\n                       \r\n                       onClick={() => {\r\n                         this.handleClickOpen();\r\n\r\n                         this.setState({\r\n                           userId: this.state.studentAccounts[index],\r\n                         });\r\n                         this.fetchSpecificStudent(\r\n                           this.state.studentAccounts[index].id\r\n                         );\r\n                       }}\r\n                     />\r\n               <DeleteIcon\r\n               style={{marginRight:\"0px\"}}\r\n                      onClick={() => {\r\n                        try {\r\n                          this.deleteEntryAsync2(\r\n                            this.state.studentAccounts[index]?.id\r\n                          );\r\n                          console.log(this.state.studentAccounts[index]?.id);\r\n                        } catch (err) {\r\n                          console.log(err);\r\n                        }\r\n                      }}\r\n                    />\r\n                    \r\n                </ListItem>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <div>You don't currently have any students. </div>\r\n          )}\r\n        </Container>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageAccounts;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx",["216"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API_URL from \"../../../environment\";\r\n\r\n//This component is the EDIT EVENTS modal where event info is updated\r\n\r\ntype AcceptedProps = {\r\n  date: any;\r\n  setDate: (e: any) => void;\r\n  oneEvent: any;\r\n  sessionToken?: any;\r\n  eventInfo: any;\r\n  setOpen2: (e: any) => void;\r\n  fetchEvents: any;\r\n  open2: any;\r\n  eventInfoIndex: any;\r\n  title: any;\r\n  hours: any;\r\n  setHours: (e: any) => void;\r\n  location: any;\r\n  setLocation: (e: any) => void;\r\n  description: any;\r\n  setTitle: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventUpdate: boolean;\r\n  setEventUpdate: (e: any) => void;\r\n};\r\n\r\nclass UpdateEvent extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventUpdate: false,\r\n      setEventUpdate: (e) => {\r\n        this.setState({ eventUpdate: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  //This is fetch is called when a user clicks \"SUBMIT\"\r\n  //This fetch updates the values of a specific event\r\n  //this.props.oneEvent.id ( given value in EventSchedule.tsx)\r\n  // is how I am able to select a specific entry\r\n  //Notice that the values of each variable come from the variables defined\r\n  //in EventSchedule.tsx\r\n  //After the fetch- redirected to /adminEvent, open2 is set to false\r\n  //this closing the modal, and fetchEvents() updates contents of table\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/events/${this.props.oneEvent.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        events: {\r\n          date: this.props.date,\r\n          title: this.props.title,\r\n          description: this.props.description,\r\n          hours: this.props.hours,\r\n          location: this.props.location,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Event update submission was successful\");\r\n        this.state.setEventUpdate(true);\r\n\r\n        this.props.fetchEvents();\r\n        this.props.setOpen2(false);\r\n      } else {\r\n        console.log(\"Event update submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  checkForEventEntry = () => {\r\n    if (this.state.eventUpdate) {\r\n      return <Redirect to=\"/adminDash\" />;\r\n    }\r\n  };\r\n\r\n  //This function closes the EDIT EVENTS modal\r\n  handleClickClose = () => {\r\n    this.props.setOpen2(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open2}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography\r\n            className=\"adminTitle\"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Update Event\r\n          </Typography>\r\n        </DialogTitle>\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <form noValidate>\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Date of Service\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      this.props.setDate(e.target.value);\r\n                    }}\r\n                    // this.props.eventInfoIndex holds this events specific information\r\n                    //this was stored in EventSchedule.tsx when the user clicked the edit icon\r\n                    //Notice, how I can not dig into the contents using dot notation\r\n                    defaultValue={this.props.eventInfoIndex.date}\r\n                  />\r\n                </form>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}></Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl style={{ minWidth: 160 }}>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Title of Event\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                      this.props.setTitle(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.title}\r\n                  />\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Location\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                      this.props.setLocation(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.location}\r\n                  />\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"off\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Event Description\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    this.props.setDescription(e.target.value);\r\n                  }}\r\n                  defaultValue={this.props.eventInfoIndex.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  style={{\r\n                    minWidth: 160,\r\n                    marginBottom: \"25px\",\r\n                  }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Number of Hours\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    onChange={(e) => {\r\n                      this.props.setHours(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.hours}\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                  </Select>\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  this.handleClickClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button type=\"submit\">Submit</Button>\r\n            </DialogActions>\r\n            <Grid container justify=\"flex-end\"></Grid>\r\n          </DialogContent>{\" \"}\r\n        </form>\r\n        {this.checkForEventEntry()}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateEvent;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx",["217"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API_URL from \"../../../environment\";\r\n\r\n\r\ntype AcceptedProps = {\r\n  sessionToken?: any;\r\n  eventInfo: any;\r\n  setOpen: (e: any) => void;\r\nfetchEvents:any;\r\n  open: any;\r\n};\r\n\r\n\r\n\r\ntype myState = {\r\n  date: any;\r\n  title: string;\r\n  description: string;\r\n  hours: number;\r\n  location: string;\r\n  eventUpdate:boolean;\r\n  setEventUpdate:(e:any)=> void;\r\n  setDate: (e: any) => void;\r\n  setTitle: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setLocation: (e: any) => void;\r\n};\r\n\r\nclass AddEvent extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      date: \"\",\r\n      location: \"\",\r\n      description: \"\",\r\n      hours: 900,\r\n      title: \" \",\r\n      eventUpdate:false,\r\n      setEventUpdate: (e) => {this.setState({eventUpdate: e})},\r\n      setDate: (e) => {this.setState({date: e})},\r\n      setLocation: (e) => {this.setState({location: e})},\r\n      setHours: (e) => {this.setState({hours: e})},\r\n      setDescription: (e) => {this.setState({description: e})},\r\n      setTitle: (e) => {this.setState({title: e})}\r\n    };\r\n  }\r\n\r\n  handleSubmit = (event: any) => {\r\n   \r\n    event.preventDefault();\r\n    fetch(`${API_URL}/events/`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        events: {\r\n          date: this.state.date,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          hours: this.state.hours,\r\n          location: this.state.location,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Event submission was successful\");\r\n        this.state.setEventUpdate(true);\r\n        // set each prop to empty\r\n        this.state.setDate(\"\");\r\n        this.state.setHours(0);\r\n        this.state.setTitle(\"\");\r\n        this.state.setDescription(\"\");\r\n        this.state.setLocation(\"\");\r\n        this.props.setOpen(false);\r\n        this.props.fetchEvents();\r\n      } else {\r\n        console.log(\"Event submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  checkForEventEntry=() => {\r\n    if (this.state.eventUpdate){\r\n      return <Redirect to=\"/adminDash\"/>\r\n    }\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.props.setOpen(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography\r\n            className=\"adminTitle\"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Add Event\r\n          </Typography>\r\n        </DialogTitle>\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n        <DialogContent>\r\n         \r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <form noValidate>\r\n                  <TextField\r\n                     \r\n                    id=\"date\"\r\n                    label=\"Date of Service\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      this.state.setDate(e.target.value);\r\n                      console.log(this.state.date)\r\n                    }}\r\n                    defaultValue={0}\r\n                  />\r\n                </form>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}></Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl style={{ minWidth: 160 }}>\r\n                  <TextField\r\n                      autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Title of Event\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                    \r\n                      this.state.setTitle(e.target.value);\r\n                     \r\n                    }}\r\n                    defaultValue={\" \"}\r\n                  />\r\n                  <TextField\r\n                      autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Location\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                    \r\n                      this.state.setLocation(e.target.value);\r\n                     \r\n                    }}\r\n                    defaultValue={\" \"}\r\n                  />\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                    autoComplete=\"off\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Event Description\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n              \r\n                    this.state.setDescription(e.target.value);\r\n                   \r\n                  }}\r\n                  defaultValue={\" \"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  style={{\r\n                    minWidth: 160,\r\n                    marginBottom: \"25px\",\r\n                  }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Number of Hours\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    onChange={(e) => {\r\n                 \r\n                      this.state.setHours(e.target.value);\r\n                   \r\n                    }}\r\n                    defaultValue={0}\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                  </Select>\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  this.handleClickClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n             \r\n                <Button\r\n              \r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n       \r\n            </DialogActions>\r\n            <Grid container justify=\"flex-end\"></Grid>\r\n     \r\n        </DialogContent> </form>\r\n        {this.checkForEventEntry()}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEvent;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\EditStudentAccounts.tsx",["218","219"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {\r\n  fetchTeacherData: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  \r\n  setFirstName: (e: any) => void;\r\n  setLastName: (e: any) => void;\r\n  setEmail: (e: any) => void;\r\n  setPassword: (e: any) => void;\r\n\r\n  sessionToken: any;\r\n  userId: any;\r\n  setOpen: (e: any) => void;\r\n  open: boolean;\r\n};\r\n\r\ntype myState = {\r\n  previousPassword: string;\r\n \r\n\r\n  update: boolean;\r\n  setUpdate: (e: any) => void;\r\n};\r\n\r\ntype studentUser = {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password?: string;\r\n};\r\n\r\nclass EditStudentAccounts extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      previousPassword:this.props.password,\r\n      update: false,\r\n      setUpdate: (e) => {\r\n        this.setState({ update: e });\r\n      },\r\n    };\r\n  }\r\n\r\n\r\n  handleClickClose = () => {\r\n    this.props.setOpen(false);\r\n  };\r\n\r\n  handleSubmit = (e:any) => {\r\n    e.preventDefault()\r\n    \r\n    const studentUser: studentUser = {\r\n      firstName: this.props.firstName,\r\n      lastName: this.props.lastName,\r\n      email: this.props.email,\r\n    };\r\n    if (this.props.password !== this.props.userId.password && this.props.password !== \"\") {\r\n      studentUser.password = this.props.password;\r\n    } \r\n    \r\n    console.log(studentUser)\r\n    fetch(`${API_URL}/user/${this.props.userId.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        studentUser,\r\n        // studentUser: {\r\n        //   firstName: this.props.firstName,\r\n        //   lastName: this.props.lastName,\r\n        //   email: this.props.email,\r\n        //   password: this.props.password\r\n\r\n        // },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.state.setUpdate(true);\r\n\r\n        this.props.fetchTeacherData();\r\n        this.props.setOpen(false);\r\n      });\r\n  };\r\n\r\n  //WHY ISN'T THIS REDIRECT WORKING?\r\n  checkForUpdate = () => {\r\n    if (this.state.update) {\r\n      return <Redirect to=\"/adminDash\" />;\r\n    }\r\n    console.log(this.state.update);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography\r\n            className=\"adminTitle\"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Edit Student User Information\r\n          </Typography>\r\n        </DialogTitle>\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"First Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                this.props.setFirstName(e.target.value);\r\n              }}\r\n              defaultValue={this.props.userId.firstName}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                this.props.setLastName(e.target.value);\r\n              }}\r\n              defaultValue={this.props.userId.lastName}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Email Address\"\r\n              type=\"email\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                this.props.setEmail(e.target.value);\r\n              }}\r\n              defaultValue={this.props.userId.email}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n              onChange={(e) => {\r\n                this.props.setPassword(e.target.value);\r\n              }}\r\n              // defaultValue={this.props.userId.password}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                this.handleClickClose();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </DialogActions>\r\n        </form>\r\n        {this.checkForUpdate()}\r\n\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditStudentAccounts;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageHours.tsx",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\environment.tsx",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentLeaderboard.tsx",["220","221","222","223","224","225","226"],"import React, { Component } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport API_URL from \"../../environment\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport StudentProfile from \"../AdminView/StudentProfile\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: string;\r\n};\r\n\r\nlet arr: any = [0];\r\nlet sum: number = 0;\r\nconst add = (a: number, b: number) => a + b;\r\n\r\ntype myState = {\r\n  specificUser: any;\r\n  totalHours:any;\r\n  userId: any;\r\n  user: any;\r\n  rank: any;\r\n  userServices: any;\r\n  setUserServices: (e: any) => void;\r\n  setUser: (e: any) => void;\r\n  setOpen: (e: any) => void;\r\n  open: any;\r\n};\r\nclass StudentLeaderboard extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      totalHours:0,\r\n      specificUser: [],\r\n      userId: \"\",\r\n      open: false,\r\n      setOpen: (entry) => {\r\n        this.setState({ open: entry });\r\n      },\r\n      rank: 1,\r\n      user: [],\r\n      userServices: [],\r\n      setUser: (e) => {\r\n        this.setState({ user: e });\r\n      },\r\n      setUserServices: (e) => {\r\n        this.setState({ userServices: e });\r\n      },\r\n    };\r\n    this.fetchUsers= this.fetchUsers.bind(this)\r\n  }\r\n  arrLength = () => {\r\n    arr.length = 0;\r\n  };\r\n\r\n  handleClickOpen = (userObj: any) => {\r\n    this.state.setOpen(true);\r\n    this.setState({ specificUser: userObj });\r\n    // this.handleTotalHours(userObj)\r\n   \r\n  };\r\n\r\n  // runTotalHours =(userObj:any) =>{\r\n  //   this.handleTotalHours(userObj)\r\n  // }\r\n\r\n  percentage = (e: any) => {\r\n    {console.log(e)}\r\n    {\r\n      this.arrLength();\r\n    }\r\n    {\r\n      console.log(e?.services);\r\n      e.services?.length > 0\r\n        ? e?.services.map((service: any, index: any) =>\r\n            arr.push(\r\n              e?.services[index].status === \"Approved\"\r\n                ? e?.services[index].hours\r\n                : 0\r\n            )\r\n          )\r\n        : console.log(\"did not work\");\r\n    }\r\n    {\r\n      e?.services.length > 0 ? (sum = arr.reduce(add)) : (sum = 0);\r\n    }\r\n    {\r\n      console.log(sum);\r\n     \r\n    }\r\n    {\r\n      this.handleTotalHours(e.id);\r\n    }\r\n  };\r\n\r\n  handleTotalHours = (id: any, user?:any) => {\r\n    // id.preventDefault();\r\n\r\n    fetch(`${API_URL}/user/totalHours/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        studentUser: {\r\n          totalHours: sum,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service status update submission was successful\");\r\n     \r\n\r\n        \r\n      } else {\r\n        console.log(\"Service status update submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  fetchUsers = () => {\r\n    fetch(`${API_URL}/user/allbyhours`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      \r\n      console.log(\"fetchUsers Function\")\r\nconsole.log(json)\r\n        this.setState({ user: json }); //taking information from the server and setting it to our state\r\n\r\n     \r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchUsers();\r\n    this.arrLength();\r\n    // console.log(this.state.user);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <br></br>\r\n        <Typography\r\n          className=\"adminTitle marginClassTotals\"\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n        >\r\n          Class Totals\r\n        </Typography>\r\n        <TableContainer style={{ marginTop: \"5px\" }} component={Paper}>\r\n          <Box\r\n            style={{\r\n              background: \"white\",\r\n              color: \"white\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <Box>\r\n              <Box\r\n                className=\"studentChart\"\r\n                style={{ background: \"white\", padding: \"0px\" }}\r\n              >\r\n                {/* <TextField\r\n                  style={{ marginLeft: \"20px\", width: \"200px\" }}\r\n                  label=\"Search by Name\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  {\" \"}\r\n                </TextField> */}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow style={{ marginLeft: \"10px\" }}>\r\n                <TableCell align=\"center\">Rank</TableCell>\r\n\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Total Hours</TableCell>\r\n                <TableCell align=\"center\">Service Details</TableCell>\r\n                <Hidden xsDown>\r\n                  {\" \"}\r\n                  <TableCell></TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {this.state.user.length > 0 ? (\r\n                this.state.user.map((user: any, index: any) => (\r\n                  <React.Fragment key={index}>\r\n                    <TableRow style={{ height: \"45px\", marginRight: \"3px\" }}>\r\n                      <TableCell align=\"center\">{index + 1} </TableCell>\r\n\r\n                      <TableCell align=\"left\">\r\n                        {user.firstName} {user.lastName}{\" \"}\r\n                        {/* {this.handleTotalHours(user.id)}  */}\r\n                        \r\n                        {/* {console.log(user)} */}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"center\">\r\n                        {\" \"}\r\n                        {this.percentage(user)} {user.totalHours}{\" \"}\r\n                     \r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {\" \"}\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          onClick={() => {\r\n                            this.handleClickOpen(user);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          <FontAwesomeIcon\r\n                            style={{\r\n                              fontSize: \"20px\",\r\n                            }}\r\n                            icon={faListAlt}\r\n                          />{\" \"}\r\n                        </Button>{\" \"}\r\n                      </TableCell>\r\n\r\n                      {this.state.open ? (\r\n                        <StudentProfile\r\n                      \r\n                        arrLength={this.arrLength}\r\n                        percentage={this.percentage}\r\n                        handleTotalHours={this.handleTotalHours}\r\n                        // runTotalHours={this.runTotalHours}\r\n                          fetchUsers={this.fetchUsers}\r\n                          specificUser={this.state.specificUser}\r\n                          open={this.state.open}\r\n                          setOpen={this.state.setOpen}\r\n                          user={this.state.user}\r\n                          sessionToken={this.props.sessionToken}\r\n                        />\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                    </TableRow>\r\n                    \r\n                    {/* {console.log(user)} */}\r\n                  </React.Fragment>\r\n                ))\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n          {console.log(`sum: ${sum}`)}\r\n        \r\n          {this.arrLength()}\r\n          {console.log(`sum: ${sum}`)}\r\n        </TableContainer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentLeaderboard;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentProfile.tsx",["227","228","229"],"import React, { Component } from \"react\";\r\nimport API_URL from \"../../environment\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\ntype AcceptedProps = {\r\n  // specificUser: studentUser[];\r\n  specificUser: any;\r\n  sessionToken: string;\r\n  setOpen: (e: any) => void;\r\n  open: boolean;\r\n  user: any;\r\n  fetchUsers: any;\r\n  // runTotalHours:any;\r\n  handleTotalHours:any;\r\n  arrLength:any;\r\n  percentage:any;\r\n};\r\n\r\ntype myState = {\r\n\r\n  currentStatus: string;\r\n};\r\n\r\ntype studentUser = {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password?: string;\r\n};\r\n\r\nclass StudentProfile extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      currentStatus: \"\"\r\n \r\n   \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchUsers();\r\n    this.props.percentage(this.props.specificUser)\r\n\r\n  }\r\n\r\n  handleClickClose = () => {\r\n    this.props.fetchUsers();\r\n    this.props.setOpen(false);\r\n    \r\n   \r\n  };\r\n\r\n  handleSubmitAsync = async (id: any, newStatus: any, userStatus?: any) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/service/status/${id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n          service: {\r\n            status: newStatus,\r\n          },\r\n        }),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: this.props.sessionToken,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      // console.log(json);\r\n      this.props.fetchUsers();\r\n      console.log(\"handletotalhours\")\r\n      this.props.handleTotalHours(id);\r\n      \r\n      this.props.arrLength();\r\n      \r\n     \r\n      // console.log(this.props.specificUser);\r\n      // this.handleClickClose();\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography\r\n            className=\"adminTitle\"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            {this.props.specificUser.firstName}{\" \"}\r\n            {this.props.specificUser.lastName}\r\n          </Typography>\r\n        </DialogTitle>\r\n        <form noValidate>\r\n          <DialogContent style={{ padding: \" 0px 15px\" }}>\r\n            <TableContainer style={{ marginTop: \"15px\" }}>\r\n              <Table style={{ width: \"auto\" }}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date </TableCell>\r\n                    <TableCell>Description</TableCell>\r\n\r\n                    <TableCell>Status</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.props.specificUser.services.length > 0 ? (\r\n                    this.props.specificUser.services.map(\r\n                      (user: any, index: any) => (\r\n                        <React.Fragment>\r\n                          <TableRow>\r\n                            <TableCell\r\n                              style={{ width: \"200px\", fontSize: \"11px\" }}\r\n                            >\r\n                              {user.hours} hour(s) on {user.date} <br></br>\r\n                            </TableCell>\r\n                            <TableCell style={{ width: \"200px\" }}>\r\n                              {user.description}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <Button>\r\n                                {\r\n                                  user.status === \"Approved\" ? (\r\n                                    <FontAwesomeIcon\r\n                                      onClick={() => {\r\n                                       user.status= \"Denied\"\r\n\r\n                                        this.handleSubmitAsync(\r\n                                          user.id,\r\n                                          \"Denied\",\r\n                                          user.status\r\n                                        );\r\n                                      }}\r\n                                      style={{\r\n                                        color: \"#06d6a0\",\r\n                                        fontSize: \"20px\",\r\n                                      }}\r\n                                      icon={faCheckSquare}\r\n                                    />\r\n                                  ) : user.status === \"Denied\" ? (\r\n                                    <FontAwesomeIcon\r\n                                      onClick={() => {\r\n                                        user.status= \"Approved\"\r\n                                        this.handleSubmitAsync(\r\n                                          user.id,\r\n                                          \"Approved\",\r\n                                          user.status\r\n                                        );\r\n                                        this.setState({\r\n                                          currentStatus: \"Approved\",\r\n                                        });\r\n                                      }}\r\n                                      style={{ color: \"#ef476f\", fontSize: \"20px\" }}\r\n                                      icon={faTimesCircle}\r\n                                    />\r\n                                  ) : (\r\n                                    <FontAwesomeIcon\r\n                                      onClick={() => {\r\n                                        user.status= \"Approved\"\r\n                                        this.handleSubmitAsync(\r\n                                          user.id,\r\n                                          \"Approved\",\r\n                                          user.status\r\n                                        );\r\n                                        this.setState({\r\n                                          currentStatus: \"Approved\",\r\n                                        });\r\n                                      }}\r\n                                      style={{\r\n                                        color: \"#ffd166\",\r\n                                   \r\n                                        fontSize: \"20px\",\r\n                                      }}\r\n                                      icon={faQuestionCircle}\r\n                                    />\r\n                                  \r\n                                ) }\r\n\r\n                          \r\n                              </Button>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                          {/* {console.log(user)} */}\r\n                        </React.Fragment>\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                this.props.fetchUsers();\r\n                this.props.setOpen(false);\r\n                // console.log(this.props.open);\r\n              }}\r\n            >\r\n              CLOSE\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentProfile;\r\n",{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"238","line":18,"column":8,"nodeType":"236","messageId":"237","endLine":18,"endColumn":18},{"ruleId":"234","severity":1,"message":"239","line":19,"column":8,"nodeType":"236","messageId":"237","endLine":19,"endColumn":18},{"ruleId":"234","severity":1,"message":"240","line":20,"column":8,"nodeType":"236","messageId":"237","endLine":20,"endColumn":18},{"ruleId":"234","severity":1,"message":"241","line":22,"column":3,"nodeType":"236","messageId":"237","endLine":22,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":53,"column":41,"nodeType":"244","endLine":53,"endColumn":105},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"245","line":33,"column":10,"nodeType":"236","messageId":"237","endLine":33,"endColumn":19},{"ruleId":"234","severity":1,"message":"246","line":8,"column":9,"nodeType":"236","messageId":"237","endLine":8,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":29,"column":40,"nodeType":"244","endLine":29,"endColumn":129},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"245","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":19},{"ruleId":"247","severity":1,"message":"248","line":54,"column":3,"nodeType":"249","messageId":"250","endLine":56,"endColumn":4},{"ruleId":"242","severity":1,"message":"243","line":163,"column":17,"nodeType":"244","endLine":163,"endColumn":56},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"245","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":45,"column":35,"nodeType":"244","endLine":45,"endColumn":99},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"251","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":53,"column":35,"nodeType":"244","endLine":53,"endColumn":99},{"ruleId":"252","severity":1,"message":"253","line":70,"column":13,"nodeType":"244","endLine":70,"endColumn":41},{"ruleId":"234","severity":1,"message":"254","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":20},{"ruleId":"234","severity":1,"message":"255","line":12,"column":8,"nodeType":"236","messageId":"237","endLine":12,"endColumn":18},{"ruleId":"234","severity":1,"message":"256","line":16,"column":8,"nodeType":"236","messageId":"237","endLine":16,"endColumn":12},{"ruleId":"234","severity":1,"message":"257","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":30},{"ruleId":"234","severity":1,"message":"258","line":30,"column":10,"nodeType":"236","messageId":"237","endLine":30,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"245","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":19},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"259","line":15,"column":10,"nodeType":"236","messageId":"237","endLine":15,"endColumn":25},{"ruleId":"234","severity":1,"message":"260","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":23},{"ruleId":"234","severity":1,"message":"261","line":17,"column":10,"nodeType":"236","messageId":"237","endLine":17,"endColumn":23},{"ruleId":"234","severity":1,"message":"262","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":26},{"ruleId":"234","severity":1,"message":"258","line":19,"column":10,"nodeType":"236","messageId":"237","endLine":19,"endColumn":16},{"ruleId":"234","severity":1,"message":"263","line":21,"column":5,"nodeType":"236","messageId":"237","endLine":21,"endColumn":15},{"ruleId":"247","severity":1,"message":"248","line":51,"column":3,"nodeType":"249","messageId":"250","endLine":53,"endColumn":4},{"ruleId":"264","severity":1,"message":"265","line":68,"column":5,"nodeType":"266","messageId":"267","endLine":70,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":71,"column":5,"nodeType":"266","messageId":"267","endLine":81,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":82,"column":5,"nodeType":"266","messageId":"267","endLine":86,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":90,"column":5,"nodeType":"266","messageId":"267","endLine":92,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":93,"column":5,"nodeType":"266","messageId":"267","endLine":103,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":104,"column":5,"nodeType":"266","messageId":"267","endLine":108,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":112,"column":5,"nodeType":"266","messageId":"267","endLine":114,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":115,"column":5,"nodeType":"266","messageId":"267","endLine":125,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":126,"column":5,"nodeType":"266","messageId":"267","endLine":130,"endColumn":6},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"255","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":18},{"ruleId":"234","severity":1,"message":"268","line":12,"column":8,"nodeType":"236","messageId":"237","endLine":12,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"269","line":120,"column":9,"nodeType":"236","messageId":"237","endLine":120,"endColumn":34},{"ruleId":"234","severity":1,"message":"235","line":1,"column":16,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"270","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":15},{"ruleId":"234","severity":1,"message":"268","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"234","severity":1,"message":"271","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":19},{"ruleId":"234","severity":1,"message":"272","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":18},{"ruleId":"234","severity":1,"message":"273","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":21},{"ruleId":"234","severity":1,"message":"274","line":12,"column":10,"nodeType":"236","messageId":"237","endLine":12,"endColumn":14},{"ruleId":"234","severity":1,"message":"275","line":13,"column":8,"nodeType":"236","messageId":"237","endLine":13,"endColumn":16},{"ruleId":"234","severity":1,"message":"276","line":14,"column":8,"nodeType":"236","messageId":"237","endLine":14,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"277","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":16},{"ruleId":"234","severity":1,"message":"278","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":18},{"ruleId":"234","severity":1,"message":"263","line":26,"column":7,"nodeType":"236","messageId":"237","endLine":26,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":376,"column":39,"nodeType":"244","endLine":376,"endColumn":82},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"279","line":13,"column":8,"nodeType":"236","messageId":"237","endLine":13,"endColumn":20},{"ruleId":"234","severity":1,"message":"280","line":15,"column":8,"nodeType":"236","messageId":"237","endLine":15,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"255","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":18},{"ruleId":"234","severity":1,"message":"281","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":21},{"ruleId":"234","severity":1,"message":"274","line":11,"column":10,"nodeType":"236","messageId":"237","endLine":11,"endColumn":14},{"ruleId":"234","severity":1,"message":"282","line":3,"column":20,"nodeType":"236","messageId":"237","endLine":3,"endColumn":33},{"ruleId":"234","severity":1,"message":"283","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":20},{"ruleId":"234","severity":1,"message":"279","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":20},{"ruleId":"234","severity":1,"message":"284","line":9,"column":8,"nodeType":"236","messageId":"237","endLine":9,"endColumn":25},{"ruleId":"234","severity":1,"message":"285","line":12,"column":10,"nodeType":"236","messageId":"237","endLine":12,"endColumn":18},{"ruleId":"234","severity":1,"message":"280","line":14,"column":8,"nodeType":"236","messageId":"237","endLine":14,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"286","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"265","line":78,"column":5,"nodeType":"266","messageId":"267","endLine":78,"endColumn":21},{"ruleId":"264","severity":1,"message":"265","line":79,"column":5,"nodeType":"266","messageId":"267","endLine":81,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":82,"column":5,"nodeType":"266","messageId":"267","endLine":93,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":94,"column":5,"nodeType":"266","messageId":"267","endLine":96,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":97,"column":5,"nodeType":"266","messageId":"267","endLine":100,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":101,"column":5,"nodeType":"266","messageId":"267","endLine":103,"endColumn":6},{"ruleId":"234","severity":1,"message":"235","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"287","line":42,"column":6,"nodeType":"236","messageId":"237","endLine":42,"endColumn":17},{"ruleId":"234","severity":1,"message":"288","line":86,"column":13,"nodeType":"236","messageId":"237","endLine":86,"endColumn":17},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SelectRole' is defined but never used.","'StudentPin' is defined but never used.","'TeacherPin' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Copyright' is defined but never used.","'Picture' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'Chip' is defined but never used.","'SettingsPowerRounded' is defined but never used.","'faUndo' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCheckSquare' is defined but never used.","'faTimesCircle' is defined but never used.","'faQuestionCircle' is defined but never used.","'percentage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","'service' is assigned a value but never used.","'Sitebar' is defined but never used.","'ButtonGroup' is defined but never used.","'AddBoxIcon' is defined but never used.","'EventNoteIcon' is defined but never used.","'Link' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'faHome' is defined but never used.","'faSearch' is defined but never used.","'AdminSitebar' is defined but never used.","'Paper' is defined but never used.","'ArrowBackIcon' is defined but never used.","'ListItemProps' is defined but never used.","'ListItemIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Redirect' is defined but never used.","'DialogContentText' is defined but never used.","'studentUser' is defined but never used.","'json' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]